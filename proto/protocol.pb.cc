// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protocol.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "protocol.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace msgs {

namespace {

const ::google::protobuf::Descriptor* KeystrokeRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  KeystrokeRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* AppList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AppList_reflection_ = NULL;
const ::google::protobuf::Descriptor* Application_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Application_reflection_ = NULL;
const ::google::protobuf::Descriptor* AppDestroyed_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AppDestroyed_reflection_ = NULL;
const ::google::protobuf::Descriptor* AppGotFocus_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AppGotFocus_reflection_ = NULL;
const ::google::protobuf::Descriptor* Event_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Event_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_protocol_2eproto() {
  protobuf_AddDesc_protocol_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "protocol.proto");
  GOOGLE_CHECK(file != NULL);
  KeystrokeRequest_descriptor_ = file->message_type(0);
  static const int KeystrokeRequest_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeystrokeRequest, app_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeystrokeRequest, ctrl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeystrokeRequest, alt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeystrokeRequest, shift_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeystrokeRequest, meta_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeystrokeRequest, key_),
  };
  KeystrokeRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      KeystrokeRequest_descriptor_,
      KeystrokeRequest::default_instance_,
      KeystrokeRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeystrokeRequest, _has_bits_[0]),
      -1,
      -1,
      sizeof(KeystrokeRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeystrokeRequest, _internal_metadata_),
      -1);
  AppList_descriptor_ = file->message_type(1);
  static const int AppList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppList, apps_),
  };
  AppList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AppList_descriptor_,
      AppList::default_instance_,
      AppList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppList, _has_bits_[0]),
      -1,
      -1,
      sizeof(AppList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppList, _internal_metadata_),
      -1);
  Application_descriptor_ = file->message_type(2);
  static const int Application_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Application, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Application, name_),
  };
  Application_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Application_descriptor_,
      Application::default_instance_,
      Application_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Application, _has_bits_[0]),
      -1,
      -1,
      sizeof(Application),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Application, _internal_metadata_),
      -1);
  AppDestroyed_descriptor_ = file->message_type(3);
  static const int AppDestroyed_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppDestroyed, id_),
  };
  AppDestroyed_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AppDestroyed_descriptor_,
      AppDestroyed::default_instance_,
      AppDestroyed_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppDestroyed, _has_bits_[0]),
      -1,
      -1,
      sizeof(AppDestroyed),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppDestroyed, _internal_metadata_),
      -1);
  AppGotFocus_descriptor_ = file->message_type(4);
  static const int AppGotFocus_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppGotFocus, id_),
  };
  AppGotFocus_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AppGotFocus_descriptor_,
      AppGotFocus::default_instance_,
      AppGotFocus_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppGotFocus, _has_bits_[0]),
      -1,
      -1,
      sizeof(AppGotFocus),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppGotFocus, _internal_metadata_),
      -1);
  Event_descriptor_ = file->message_type(5);
  static const int Event_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, destroyed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, created_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, got_focus_),
  };
  Event_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Event_descriptor_,
      Event::default_instance_,
      Event_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, _has_bits_[0]),
      -1,
      -1,
      sizeof(Event),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_protocol_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      KeystrokeRequest_descriptor_, &KeystrokeRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AppList_descriptor_, &AppList::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Application_descriptor_, &Application::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AppDestroyed_descriptor_, &AppDestroyed::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AppGotFocus_descriptor_, &AppGotFocus::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Event_descriptor_, &Event::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_protocol_2eproto() {
  delete KeystrokeRequest::default_instance_;
  delete KeystrokeRequest_reflection_;
  delete AppList::default_instance_;
  delete AppList_reflection_;
  delete Application::default_instance_;
  delete Application_reflection_;
  delete AppDestroyed::default_instance_;
  delete AppDestroyed_reflection_;
  delete AppGotFocus::default_instance_;
  delete AppGotFocus_reflection_;
  delete Event::default_instance_;
  delete Event_reflection_;
}

void protobuf_AddDesc_protocol_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::msgs::protobuf_AddDesc_keys_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016protocol.proto\022\004msgs\032\nkeys.proto\"v\n\020Ke"
    "ystrokeRequest\022\016\n\006app_id\030\001 \002(\004\022\014\n\004ctrl\030\002"
    " \002(\010\022\013\n\003alt\030\003 \002(\010\022\r\n\005shift\030\004 \002(\010\022\014\n\004meta"
    "\030\005 \002(\010\022\032\n\003key\030\006 \002(\0162\r.msgs.Keycode\"*\n\007Ap"
    "pList\022\037\n\004apps\030\001 \003(\0132\021.msgs.Application\"\'"
    "\n\013Application\022\n\n\002id\030\001 \002(\004\022\014\n\004name\030\002 \002(\t\""
    "\032\n\014AppDestroyed\022\n\n\002id\030\001 \002(\004\"\031\n\013AppGotFoc"
    "us\022\n\n\002id\030\001 \002(\004\"x\n\005Event\022%\n\tdestroyed\030\001 \001"
    "(\0132\022.msgs.AppDestroyed\022\"\n\007created\030\002 \001(\0132"
    "\021.msgs.Application\022$\n\tgot_focus\030\003 \001(\0132\021."
    "msgs.AppGotFocus", 416);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "protocol.proto", &protobuf_RegisterTypes);
  KeystrokeRequest::default_instance_ = new KeystrokeRequest();
  AppList::default_instance_ = new AppList();
  Application::default_instance_ = new Application();
  AppDestroyed::default_instance_ = new AppDestroyed();
  AppGotFocus::default_instance_ = new AppGotFocus();
  Event::default_instance_ = new Event();
  KeystrokeRequest::default_instance_->InitAsDefaultInstance();
  AppList::default_instance_->InitAsDefaultInstance();
  Application::default_instance_->InitAsDefaultInstance();
  AppDestroyed::default_instance_->InitAsDefaultInstance();
  AppGotFocus::default_instance_->InitAsDefaultInstance();
  Event::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_protocol_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_protocol_2eproto {
  StaticDescriptorInitializer_protocol_2eproto() {
    protobuf_AddDesc_protocol_2eproto();
  }
} static_descriptor_initializer_protocol_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KeystrokeRequest::kAppIdFieldNumber;
const int KeystrokeRequest::kCtrlFieldNumber;
const int KeystrokeRequest::kAltFieldNumber;
const int KeystrokeRequest::kShiftFieldNumber;
const int KeystrokeRequest::kMetaFieldNumber;
const int KeystrokeRequest::kKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KeystrokeRequest::KeystrokeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msgs.KeystrokeRequest)
}

void KeystrokeRequest::InitAsDefaultInstance() {
}

KeystrokeRequest::KeystrokeRequest(const KeystrokeRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msgs.KeystrokeRequest)
}

void KeystrokeRequest::SharedCtor() {
  _cached_size_ = 0;
  app_id_ = GOOGLE_ULONGLONG(0);
  ctrl_ = false;
  alt_ = false;
  shift_ = false;
  meta_ = false;
  key_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

KeystrokeRequest::~KeystrokeRequest() {
  // @@protoc_insertion_point(destructor:msgs.KeystrokeRequest)
  SharedDtor();
}

void KeystrokeRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void KeystrokeRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* KeystrokeRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return KeystrokeRequest_descriptor_;
}

const KeystrokeRequest& KeystrokeRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

KeystrokeRequest* KeystrokeRequest::default_instance_ = NULL;

KeystrokeRequest* KeystrokeRequest::New(::google::protobuf::Arena* arena) const {
  KeystrokeRequest* n = new KeystrokeRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void KeystrokeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:msgs.KeystrokeRequest)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(KeystrokeRequest, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<KeystrokeRequest*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 63u) {
    ZR_(app_id_, key_);
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool KeystrokeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msgs.KeystrokeRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 app_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &app_id_)));
          set_has_app_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ctrl;
        break;
      }

      // required bool ctrl = 2;
      case 2: {
        if (tag == 16) {
         parse_ctrl:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ctrl_)));
          set_has_ctrl();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_alt;
        break;
      }

      // required bool alt = 3;
      case 3: {
        if (tag == 24) {
         parse_alt:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &alt_)));
          set_has_alt();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_shift;
        break;
      }

      // required bool shift = 4;
      case 4: {
        if (tag == 32) {
         parse_shift:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &shift_)));
          set_has_shift();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_meta;
        break;
      }

      // required bool meta = 5;
      case 5: {
        if (tag == 40) {
         parse_meta:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &meta_)));
          set_has_meta();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_key;
        break;
      }

      // required .msgs.Keycode key = 6;
      case 6: {
        if (tag == 48) {
         parse_key:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::msgs::Keycode_IsValid(value)) {
            set_key(static_cast< ::msgs::Keycode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(6, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msgs.KeystrokeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msgs.KeystrokeRequest)
  return false;
#undef DO_
}

void KeystrokeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msgs.KeystrokeRequest)
  // required uint64 app_id = 1;
  if (has_app_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->app_id(), output);
  }

  // required bool ctrl = 2;
  if (has_ctrl()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->ctrl(), output);
  }

  // required bool alt = 3;
  if (has_alt()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->alt(), output);
  }

  // required bool shift = 4;
  if (has_shift()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->shift(), output);
  }

  // required bool meta = 5;
  if (has_meta()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->meta(), output);
  }

  // required .msgs.Keycode key = 6;
  if (has_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->key(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msgs.KeystrokeRequest)
}

::google::protobuf::uint8* KeystrokeRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msgs.KeystrokeRequest)
  // required uint64 app_id = 1;
  if (has_app_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->app_id(), target);
  }

  // required bool ctrl = 2;
  if (has_ctrl()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->ctrl(), target);
  }

  // required bool alt = 3;
  if (has_alt()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->alt(), target);
  }

  // required bool shift = 4;
  if (has_shift()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->shift(), target);
  }

  // required bool meta = 5;
  if (has_meta()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->meta(), target);
  }

  // required .msgs.Keycode key = 6;
  if (has_key()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->key(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msgs.KeystrokeRequest)
  return target;
}

int KeystrokeRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:msgs.KeystrokeRequest)
  int total_size = 0;

  if (has_app_id()) {
    // required uint64 app_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->app_id());
  }

  if (has_ctrl()) {
    // required bool ctrl = 2;
    total_size += 1 + 1;
  }

  if (has_alt()) {
    // required bool alt = 3;
    total_size += 1 + 1;
  }

  if (has_shift()) {
    // required bool shift = 4;
    total_size += 1 + 1;
  }

  if (has_meta()) {
    // required bool meta = 5;
    total_size += 1 + 1;
  }

  if (has_key()) {
    // required .msgs.Keycode key = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->key());
  }

  return total_size;
}
int KeystrokeRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msgs.KeystrokeRequest)
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000003f) ^ 0x0000003f) == 0) {  // All required fields are present.
    // required uint64 app_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->app_id());

    // required bool ctrl = 2;
    total_size += 1 + 1;

    // required bool alt = 3;
    total_size += 1 + 1;

    // required bool shift = 4;
    total_size += 1 + 1;

    // required bool meta = 5;
    total_size += 1 + 1;

    // required .msgs.Keycode key = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->key());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void KeystrokeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msgs.KeystrokeRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const KeystrokeRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const KeystrokeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msgs.KeystrokeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msgs.KeystrokeRequest)
    MergeFrom(*source);
  }
}

void KeystrokeRequest::MergeFrom(const KeystrokeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msgs.KeystrokeRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_app_id()) {
      set_app_id(from.app_id());
    }
    if (from.has_ctrl()) {
      set_ctrl(from.ctrl());
    }
    if (from.has_alt()) {
      set_alt(from.alt());
    }
    if (from.has_shift()) {
      set_shift(from.shift());
    }
    if (from.has_meta()) {
      set_meta(from.meta());
    }
    if (from.has_key()) {
      set_key(from.key());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void KeystrokeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msgs.KeystrokeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KeystrokeRequest::CopyFrom(const KeystrokeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msgs.KeystrokeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeystrokeRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;

  return true;
}

void KeystrokeRequest::Swap(KeystrokeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KeystrokeRequest::InternalSwap(KeystrokeRequest* other) {
  std::swap(app_id_, other->app_id_);
  std::swap(ctrl_, other->ctrl_);
  std::swap(alt_, other->alt_);
  std::swap(shift_, other->shift_);
  std::swap(meta_, other->meta_);
  std::swap(key_, other->key_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata KeystrokeRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = KeystrokeRequest_descriptor_;
  metadata.reflection = KeystrokeRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// KeystrokeRequest

// required uint64 app_id = 1;
bool KeystrokeRequest::has_app_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void KeystrokeRequest::set_has_app_id() {
  _has_bits_[0] |= 0x00000001u;
}
void KeystrokeRequest::clear_has_app_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void KeystrokeRequest::clear_app_id() {
  app_id_ = GOOGLE_ULONGLONG(0);
  clear_has_app_id();
}
 ::google::protobuf::uint64 KeystrokeRequest::app_id() const {
  // @@protoc_insertion_point(field_get:msgs.KeystrokeRequest.app_id)
  return app_id_;
}
 void KeystrokeRequest::set_app_id(::google::protobuf::uint64 value) {
  set_has_app_id();
  app_id_ = value;
  // @@protoc_insertion_point(field_set:msgs.KeystrokeRequest.app_id)
}

// required bool ctrl = 2;
bool KeystrokeRequest::has_ctrl() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void KeystrokeRequest::set_has_ctrl() {
  _has_bits_[0] |= 0x00000002u;
}
void KeystrokeRequest::clear_has_ctrl() {
  _has_bits_[0] &= ~0x00000002u;
}
void KeystrokeRequest::clear_ctrl() {
  ctrl_ = false;
  clear_has_ctrl();
}
 bool KeystrokeRequest::ctrl() const {
  // @@protoc_insertion_point(field_get:msgs.KeystrokeRequest.ctrl)
  return ctrl_;
}
 void KeystrokeRequest::set_ctrl(bool value) {
  set_has_ctrl();
  ctrl_ = value;
  // @@protoc_insertion_point(field_set:msgs.KeystrokeRequest.ctrl)
}

// required bool alt = 3;
bool KeystrokeRequest::has_alt() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void KeystrokeRequest::set_has_alt() {
  _has_bits_[0] |= 0x00000004u;
}
void KeystrokeRequest::clear_has_alt() {
  _has_bits_[0] &= ~0x00000004u;
}
void KeystrokeRequest::clear_alt() {
  alt_ = false;
  clear_has_alt();
}
 bool KeystrokeRequest::alt() const {
  // @@protoc_insertion_point(field_get:msgs.KeystrokeRequest.alt)
  return alt_;
}
 void KeystrokeRequest::set_alt(bool value) {
  set_has_alt();
  alt_ = value;
  // @@protoc_insertion_point(field_set:msgs.KeystrokeRequest.alt)
}

// required bool shift = 4;
bool KeystrokeRequest::has_shift() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void KeystrokeRequest::set_has_shift() {
  _has_bits_[0] |= 0x00000008u;
}
void KeystrokeRequest::clear_has_shift() {
  _has_bits_[0] &= ~0x00000008u;
}
void KeystrokeRequest::clear_shift() {
  shift_ = false;
  clear_has_shift();
}
 bool KeystrokeRequest::shift() const {
  // @@protoc_insertion_point(field_get:msgs.KeystrokeRequest.shift)
  return shift_;
}
 void KeystrokeRequest::set_shift(bool value) {
  set_has_shift();
  shift_ = value;
  // @@protoc_insertion_point(field_set:msgs.KeystrokeRequest.shift)
}

// required bool meta = 5;
bool KeystrokeRequest::has_meta() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void KeystrokeRequest::set_has_meta() {
  _has_bits_[0] |= 0x00000010u;
}
void KeystrokeRequest::clear_has_meta() {
  _has_bits_[0] &= ~0x00000010u;
}
void KeystrokeRequest::clear_meta() {
  meta_ = false;
  clear_has_meta();
}
 bool KeystrokeRequest::meta() const {
  // @@protoc_insertion_point(field_get:msgs.KeystrokeRequest.meta)
  return meta_;
}
 void KeystrokeRequest::set_meta(bool value) {
  set_has_meta();
  meta_ = value;
  // @@protoc_insertion_point(field_set:msgs.KeystrokeRequest.meta)
}

// required .msgs.Keycode key = 6;
bool KeystrokeRequest::has_key() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void KeystrokeRequest::set_has_key() {
  _has_bits_[0] |= 0x00000020u;
}
void KeystrokeRequest::clear_has_key() {
  _has_bits_[0] &= ~0x00000020u;
}
void KeystrokeRequest::clear_key() {
  key_ = 0;
  clear_has_key();
}
 ::msgs::Keycode KeystrokeRequest::key() const {
  // @@protoc_insertion_point(field_get:msgs.KeystrokeRequest.key)
  return static_cast< ::msgs::Keycode >(key_);
}
 void KeystrokeRequest::set_key(::msgs::Keycode value) {
  assert(::msgs::Keycode_IsValid(value));
  set_has_key();
  key_ = value;
  // @@protoc_insertion_point(field_set:msgs.KeystrokeRequest.key)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AppList::kAppsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AppList::AppList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msgs.AppList)
}

void AppList::InitAsDefaultInstance() {
}

AppList::AppList(const AppList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msgs.AppList)
}

void AppList::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AppList::~AppList() {
  // @@protoc_insertion_point(destructor:msgs.AppList)
  SharedDtor();
}

void AppList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AppList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AppList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AppList_descriptor_;
}

const AppList& AppList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

AppList* AppList::default_instance_ = NULL;

AppList* AppList::New(::google::protobuf::Arena* arena) const {
  AppList* n = new AppList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AppList::Clear() {
// @@protoc_insertion_point(message_clear_start:msgs.AppList)
  apps_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool AppList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msgs.AppList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .msgs.Application apps = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_apps:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_apps()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_apps;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msgs.AppList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msgs.AppList)
  return false;
#undef DO_
}

void AppList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msgs.AppList)
  // repeated .msgs.Application apps = 1;
  for (unsigned int i = 0, n = this->apps_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->apps(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msgs.AppList)
}

::google::protobuf::uint8* AppList::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msgs.AppList)
  // repeated .msgs.Application apps = 1;
  for (unsigned int i = 0, n = this->apps_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->apps(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msgs.AppList)
  return target;
}

int AppList::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msgs.AppList)
  int total_size = 0;

  // repeated .msgs.Application apps = 1;
  total_size += 1 * this->apps_size();
  for (int i = 0; i < this->apps_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->apps(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AppList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msgs.AppList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const AppList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const AppList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msgs.AppList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msgs.AppList)
    MergeFrom(*source);
  }
}

void AppList::MergeFrom(const AppList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msgs.AppList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  apps_.MergeFrom(from.apps_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void AppList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msgs.AppList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AppList::CopyFrom(const AppList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msgs.AppList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppList::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->apps())) return false;
  return true;
}

void AppList::Swap(AppList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AppList::InternalSwap(AppList* other) {
  apps_.UnsafeArenaSwap(&other->apps_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AppList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AppList_descriptor_;
  metadata.reflection = AppList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AppList

// repeated .msgs.Application apps = 1;
int AppList::apps_size() const {
  return apps_.size();
}
void AppList::clear_apps() {
  apps_.Clear();
}
const ::msgs::Application& AppList::apps(int index) const {
  // @@protoc_insertion_point(field_get:msgs.AppList.apps)
  return apps_.Get(index);
}
::msgs::Application* AppList::mutable_apps(int index) {
  // @@protoc_insertion_point(field_mutable:msgs.AppList.apps)
  return apps_.Mutable(index);
}
::msgs::Application* AppList::add_apps() {
  // @@protoc_insertion_point(field_add:msgs.AppList.apps)
  return apps_.Add();
}
::google::protobuf::RepeatedPtrField< ::msgs::Application >*
AppList::mutable_apps() {
  // @@protoc_insertion_point(field_mutable_list:msgs.AppList.apps)
  return &apps_;
}
const ::google::protobuf::RepeatedPtrField< ::msgs::Application >&
AppList::apps() const {
  // @@protoc_insertion_point(field_list:msgs.AppList.apps)
  return apps_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Application::kIdFieldNumber;
const int Application::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Application::Application()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msgs.Application)
}

void Application::InitAsDefaultInstance() {
}

Application::Application(const Application& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msgs.Application)
}

void Application::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = GOOGLE_ULONGLONG(0);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Application::~Application() {
  // @@protoc_insertion_point(destructor:msgs.Application)
  SharedDtor();
}

void Application::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Application::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Application::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Application_descriptor_;
}

const Application& Application::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

Application* Application::default_instance_ = NULL;

Application* Application::New(::google::protobuf::Arena* arena) const {
  Application* n = new Application;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Application::Clear() {
// @@protoc_insertion_point(message_clear_start:msgs.Application)
  if (_has_bits_[0 / 32] & 3u) {
    id_ = GOOGLE_ULONGLONG(0);
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Application::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msgs.Application)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // required string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "msgs.Application.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msgs.Application)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msgs.Application)
  return false;
#undef DO_
}

void Application::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msgs.Application)
  // required uint64 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msgs.Application.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msgs.Application)
}

::google::protobuf::uint8* Application::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msgs.Application)
  // required uint64 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msgs.Application.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msgs.Application)
  return target;
}

int Application::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:msgs.Application)
  int total_size = 0;

  if (has_id()) {
    // required uint64 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  if (has_name()) {
    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  return total_size;
}
int Application::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msgs.Application)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint64 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());

    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Application::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msgs.Application)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Application* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Application>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msgs.Application)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msgs.Application)
    MergeFrom(*source);
  }
}

void Application::MergeFrom(const Application& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msgs.Application)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Application::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msgs.Application)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Application::CopyFrom(const Application& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msgs.Application)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Application::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void Application::Swap(Application* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Application::InternalSwap(Application* other) {
  std::swap(id_, other->id_);
  name_.Swap(&other->name_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Application::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Application_descriptor_;
  metadata.reflection = Application_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Application

// required uint64 id = 1;
bool Application::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Application::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void Application::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void Application::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
 ::google::protobuf::uint64 Application::id() const {
  // @@protoc_insertion_point(field_get:msgs.Application.id)
  return id_;
}
 void Application::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:msgs.Application.id)
}

// required string name = 2;
bool Application::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Application::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
void Application::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void Application::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& Application::name() const {
  // @@protoc_insertion_point(field_get:msgs.Application.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Application::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msgs.Application.name)
}
 void Application::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msgs.Application.name)
}
 void Application::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msgs.Application.name)
}
 ::std::string* Application::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:msgs.Application.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Application::release_name() {
  // @@protoc_insertion_point(field_release:msgs.Application.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Application::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:msgs.Application.name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AppDestroyed::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AppDestroyed::AppDestroyed()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msgs.AppDestroyed)
}

void AppDestroyed::InitAsDefaultInstance() {
}

AppDestroyed::AppDestroyed(const AppDestroyed& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msgs.AppDestroyed)
}

void AppDestroyed::SharedCtor() {
  _cached_size_ = 0;
  id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AppDestroyed::~AppDestroyed() {
  // @@protoc_insertion_point(destructor:msgs.AppDestroyed)
  SharedDtor();
}

void AppDestroyed::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AppDestroyed::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AppDestroyed::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AppDestroyed_descriptor_;
}

const AppDestroyed& AppDestroyed::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

AppDestroyed* AppDestroyed::default_instance_ = NULL;

AppDestroyed* AppDestroyed::New(::google::protobuf::Arena* arena) const {
  AppDestroyed* n = new AppDestroyed;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AppDestroyed::Clear() {
// @@protoc_insertion_point(message_clear_start:msgs.AppDestroyed)
  id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool AppDestroyed::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msgs.AppDestroyed)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msgs.AppDestroyed)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msgs.AppDestroyed)
  return false;
#undef DO_
}

void AppDestroyed::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msgs.AppDestroyed)
  // required uint64 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msgs.AppDestroyed)
}

::google::protobuf::uint8* AppDestroyed::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msgs.AppDestroyed)
  // required uint64 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msgs.AppDestroyed)
  return target;
}

int AppDestroyed::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msgs.AppDestroyed)
  int total_size = 0;

  // required uint64 id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AppDestroyed::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msgs.AppDestroyed)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const AppDestroyed* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const AppDestroyed>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msgs.AppDestroyed)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msgs.AppDestroyed)
    MergeFrom(*source);
  }
}

void AppDestroyed::MergeFrom(const AppDestroyed& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msgs.AppDestroyed)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void AppDestroyed::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msgs.AppDestroyed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AppDestroyed::CopyFrom(const AppDestroyed& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msgs.AppDestroyed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppDestroyed::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void AppDestroyed::Swap(AppDestroyed* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AppDestroyed::InternalSwap(AppDestroyed* other) {
  std::swap(id_, other->id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AppDestroyed::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AppDestroyed_descriptor_;
  metadata.reflection = AppDestroyed_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AppDestroyed

// required uint64 id = 1;
bool AppDestroyed::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AppDestroyed::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void AppDestroyed::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void AppDestroyed::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
 ::google::protobuf::uint64 AppDestroyed::id() const {
  // @@protoc_insertion_point(field_get:msgs.AppDestroyed.id)
  return id_;
}
 void AppDestroyed::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:msgs.AppDestroyed.id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AppGotFocus::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AppGotFocus::AppGotFocus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msgs.AppGotFocus)
}

void AppGotFocus::InitAsDefaultInstance() {
}

AppGotFocus::AppGotFocus(const AppGotFocus& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msgs.AppGotFocus)
}

void AppGotFocus::SharedCtor() {
  _cached_size_ = 0;
  id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AppGotFocus::~AppGotFocus() {
  // @@protoc_insertion_point(destructor:msgs.AppGotFocus)
  SharedDtor();
}

void AppGotFocus::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AppGotFocus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AppGotFocus::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AppGotFocus_descriptor_;
}

const AppGotFocus& AppGotFocus::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

AppGotFocus* AppGotFocus::default_instance_ = NULL;

AppGotFocus* AppGotFocus::New(::google::protobuf::Arena* arena) const {
  AppGotFocus* n = new AppGotFocus;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AppGotFocus::Clear() {
// @@protoc_insertion_point(message_clear_start:msgs.AppGotFocus)
  id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool AppGotFocus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msgs.AppGotFocus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msgs.AppGotFocus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msgs.AppGotFocus)
  return false;
#undef DO_
}

void AppGotFocus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msgs.AppGotFocus)
  // required uint64 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msgs.AppGotFocus)
}

::google::protobuf::uint8* AppGotFocus::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msgs.AppGotFocus)
  // required uint64 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msgs.AppGotFocus)
  return target;
}

int AppGotFocus::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msgs.AppGotFocus)
  int total_size = 0;

  // required uint64 id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AppGotFocus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msgs.AppGotFocus)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const AppGotFocus* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const AppGotFocus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msgs.AppGotFocus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msgs.AppGotFocus)
    MergeFrom(*source);
  }
}

void AppGotFocus::MergeFrom(const AppGotFocus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msgs.AppGotFocus)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void AppGotFocus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msgs.AppGotFocus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AppGotFocus::CopyFrom(const AppGotFocus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msgs.AppGotFocus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppGotFocus::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void AppGotFocus::Swap(AppGotFocus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AppGotFocus::InternalSwap(AppGotFocus* other) {
  std::swap(id_, other->id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AppGotFocus::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AppGotFocus_descriptor_;
  metadata.reflection = AppGotFocus_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AppGotFocus

// required uint64 id = 1;
bool AppGotFocus::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AppGotFocus::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void AppGotFocus::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void AppGotFocus::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
 ::google::protobuf::uint64 AppGotFocus::id() const {
  // @@protoc_insertion_point(field_get:msgs.AppGotFocus.id)
  return id_;
}
 void AppGotFocus::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:msgs.AppGotFocus.id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Event::kDestroyedFieldNumber;
const int Event::kCreatedFieldNumber;
const int Event::kGotFocusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Event::Event()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msgs.Event)
}

void Event::InitAsDefaultInstance() {
  destroyed_ = const_cast< ::msgs::AppDestroyed*>(&::msgs::AppDestroyed::default_instance());
  created_ = const_cast< ::msgs::Application*>(&::msgs::Application::default_instance());
  got_focus_ = const_cast< ::msgs::AppGotFocus*>(&::msgs::AppGotFocus::default_instance());
}

Event::Event(const Event& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msgs.Event)
}

void Event::SharedCtor() {
  _cached_size_ = 0;
  destroyed_ = NULL;
  created_ = NULL;
  got_focus_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Event::~Event() {
  // @@protoc_insertion_point(destructor:msgs.Event)
  SharedDtor();
}

void Event::SharedDtor() {
  if (this != default_instance_) {
    delete destroyed_;
    delete created_;
    delete got_focus_;
  }
}

void Event::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Event::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Event_descriptor_;
}

const Event& Event::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2eproto();
  return *default_instance_;
}

Event* Event::default_instance_ = NULL;

Event* Event::New(::google::protobuf::Arena* arena) const {
  Event* n = new Event;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Event::Clear() {
// @@protoc_insertion_point(message_clear_start:msgs.Event)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_destroyed()) {
      if (destroyed_ != NULL) destroyed_->::msgs::AppDestroyed::Clear();
    }
    if (has_created()) {
      if (created_ != NULL) created_->::msgs::Application::Clear();
    }
    if (has_got_focus()) {
      if (got_focus_ != NULL) got_focus_->::msgs::AppGotFocus::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Event::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msgs.Event)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .msgs.AppDestroyed destroyed = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_destroyed()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_created;
        break;
      }

      // optional .msgs.Application created = 2;
      case 2: {
        if (tag == 18) {
         parse_created:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_created()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_got_focus;
        break;
      }

      // optional .msgs.AppGotFocus got_focus = 3;
      case 3: {
        if (tag == 26) {
         parse_got_focus:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_got_focus()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msgs.Event)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msgs.Event)
  return false;
#undef DO_
}

void Event::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msgs.Event)
  // optional .msgs.AppDestroyed destroyed = 1;
  if (has_destroyed()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->destroyed_, output);
  }

  // optional .msgs.Application created = 2;
  if (has_created()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->created_, output);
  }

  // optional .msgs.AppGotFocus got_focus = 3;
  if (has_got_focus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->got_focus_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msgs.Event)
}

::google::protobuf::uint8* Event::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msgs.Event)
  // optional .msgs.AppDestroyed destroyed = 1;
  if (has_destroyed()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->destroyed_, target);
  }

  // optional .msgs.Application created = 2;
  if (has_created()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, *this->created_, target);
  }

  // optional .msgs.AppGotFocus got_focus = 3;
  if (has_got_focus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, *this->got_focus_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msgs.Event)
  return target;
}

int Event::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:msgs.Event)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 7u) {
    // optional .msgs.AppDestroyed destroyed = 1;
    if (has_destroyed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->destroyed_);
    }

    // optional .msgs.Application created = 2;
    if (has_created()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->created_);
    }

    // optional .msgs.AppGotFocus got_focus = 3;
    if (has_got_focus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->got_focus_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Event::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msgs.Event)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Event* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Event>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msgs.Event)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msgs.Event)
    MergeFrom(*source);
  }
}

void Event::MergeFrom(const Event& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msgs.Event)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_destroyed()) {
      mutable_destroyed()->::msgs::AppDestroyed::MergeFrom(from.destroyed());
    }
    if (from.has_created()) {
      mutable_created()->::msgs::Application::MergeFrom(from.created());
    }
    if (from.has_got_focus()) {
      mutable_got_focus()->::msgs::AppGotFocus::MergeFrom(from.got_focus());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Event::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msgs.Event)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Event::CopyFrom(const Event& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msgs.Event)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Event::IsInitialized() const {

  if (has_destroyed()) {
    if (!this->destroyed_->IsInitialized()) return false;
  }
  if (has_created()) {
    if (!this->created_->IsInitialized()) return false;
  }
  if (has_got_focus()) {
    if (!this->got_focus_->IsInitialized()) return false;
  }
  return true;
}

void Event::Swap(Event* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Event::InternalSwap(Event* other) {
  std::swap(destroyed_, other->destroyed_);
  std::swap(created_, other->created_);
  std::swap(got_focus_, other->got_focus_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Event::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Event_descriptor_;
  metadata.reflection = Event_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Event

// optional .msgs.AppDestroyed destroyed = 1;
bool Event::has_destroyed() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Event::set_has_destroyed() {
  _has_bits_[0] |= 0x00000001u;
}
void Event::clear_has_destroyed() {
  _has_bits_[0] &= ~0x00000001u;
}
void Event::clear_destroyed() {
  if (destroyed_ != NULL) destroyed_->::msgs::AppDestroyed::Clear();
  clear_has_destroyed();
}
const ::msgs::AppDestroyed& Event::destroyed() const {
  // @@protoc_insertion_point(field_get:msgs.Event.destroyed)
  return destroyed_ != NULL ? *destroyed_ : *default_instance_->destroyed_;
}
::msgs::AppDestroyed* Event::mutable_destroyed() {
  set_has_destroyed();
  if (destroyed_ == NULL) {
    destroyed_ = new ::msgs::AppDestroyed;
  }
  // @@protoc_insertion_point(field_mutable:msgs.Event.destroyed)
  return destroyed_;
}
::msgs::AppDestroyed* Event::release_destroyed() {
  // @@protoc_insertion_point(field_release:msgs.Event.destroyed)
  clear_has_destroyed();
  ::msgs::AppDestroyed* temp = destroyed_;
  destroyed_ = NULL;
  return temp;
}
void Event::set_allocated_destroyed(::msgs::AppDestroyed* destroyed) {
  delete destroyed_;
  destroyed_ = destroyed;
  if (destroyed) {
    set_has_destroyed();
  } else {
    clear_has_destroyed();
  }
  // @@protoc_insertion_point(field_set_allocated:msgs.Event.destroyed)
}

// optional .msgs.Application created = 2;
bool Event::has_created() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Event::set_has_created() {
  _has_bits_[0] |= 0x00000002u;
}
void Event::clear_has_created() {
  _has_bits_[0] &= ~0x00000002u;
}
void Event::clear_created() {
  if (created_ != NULL) created_->::msgs::Application::Clear();
  clear_has_created();
}
const ::msgs::Application& Event::created() const {
  // @@protoc_insertion_point(field_get:msgs.Event.created)
  return created_ != NULL ? *created_ : *default_instance_->created_;
}
::msgs::Application* Event::mutable_created() {
  set_has_created();
  if (created_ == NULL) {
    created_ = new ::msgs::Application;
  }
  // @@protoc_insertion_point(field_mutable:msgs.Event.created)
  return created_;
}
::msgs::Application* Event::release_created() {
  // @@protoc_insertion_point(field_release:msgs.Event.created)
  clear_has_created();
  ::msgs::Application* temp = created_;
  created_ = NULL;
  return temp;
}
void Event::set_allocated_created(::msgs::Application* created) {
  delete created_;
  created_ = created;
  if (created) {
    set_has_created();
  } else {
    clear_has_created();
  }
  // @@protoc_insertion_point(field_set_allocated:msgs.Event.created)
}

// optional .msgs.AppGotFocus got_focus = 3;
bool Event::has_got_focus() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Event::set_has_got_focus() {
  _has_bits_[0] |= 0x00000004u;
}
void Event::clear_has_got_focus() {
  _has_bits_[0] &= ~0x00000004u;
}
void Event::clear_got_focus() {
  if (got_focus_ != NULL) got_focus_->::msgs::AppGotFocus::Clear();
  clear_has_got_focus();
}
const ::msgs::AppGotFocus& Event::got_focus() const {
  // @@protoc_insertion_point(field_get:msgs.Event.got_focus)
  return got_focus_ != NULL ? *got_focus_ : *default_instance_->got_focus_;
}
::msgs::AppGotFocus* Event::mutable_got_focus() {
  set_has_got_focus();
  if (got_focus_ == NULL) {
    got_focus_ = new ::msgs::AppGotFocus;
  }
  // @@protoc_insertion_point(field_mutable:msgs.Event.got_focus)
  return got_focus_;
}
::msgs::AppGotFocus* Event::release_got_focus() {
  // @@protoc_insertion_point(field_release:msgs.Event.got_focus)
  clear_has_got_focus();
  ::msgs::AppGotFocus* temp = got_focus_;
  got_focus_ = NULL;
  return temp;
}
void Event::set_allocated_got_focus(::msgs::AppGotFocus* got_focus) {
  delete got_focus_;
  got_focus_ = got_focus;
  if (got_focus) {
    set_has_got_focus();
  } else {
    clear_has_got_focus();
  }
  // @@protoc_insertion_point(field_set_allocated:msgs.Event.got_focus)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace msgs

// @@protoc_insertion_point(global_scope)
